@model MyHR.Domain.Models.NewEmployeeModel

@{
    ViewBag.Title = "AddEmployee";
}

<center> <h2>Add an Employee</h2></center>

@using (Html.BeginForm())
{
    <div>
    <input type="file" onchange="onImageSelected(event)">
    <img id="employeeImage" height="200">
    </div>


    @Html.HiddenFor(m => m.EmployeeId)

    @Html.Label("name", "Name:")
    <br /> @Html.TextBoxFor(m => m.Name)

    <br />
        @Html.Label("surname", "Surname:")
        <br /> @Html.TextBoxFor(m => m.Surname)

        <br />

        @Html.Label("pin", "PIN:")
        <br />@Html.TextBoxFor(m => m.Pin)

        <br />
        @Html.Label("address", "Adress: ")
        <br />


        <button type="button" color="pink" data-toggle="modal" data-target="#myModal">Add adress</button>
        <br />
        <!-- Modal -->
        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Employee adress:</h4>
                    </div>
                    <div class="modal-body">
                        <p>
                            @(Html.Label("county", "County: "))
                            @(Html.Kendo().ComboBoxFor(m => m.CountyId)
                                                                              .Name("CountyId")
                                                     .HtmlAttributes(new { style = "width:60%;" })
                                                     .Placeholder("Select a county...")
                                                     .DataTextField("name")
                                                     .DataValueField("id")
                                                     .Filter(FilterType.Contains)
                                                     .DataSource(source =>
                                                 {
                                                     source.Read(read =>
                                                      {
                                                      read.Action("GetCounty", "DictionaryItem");

                                                     });
                                                      })
                                                   .AutoBind(true)
                            )
                            <br />

                            @(Html.Label("citys", "City: "))
                            @(Html.Kendo().ComboBoxFor(m => m.CityId)
                                       .Name("CityId")
                                       .HtmlAttributes(new { style = "width:60%;" })
                                       .Placeholder("Select a city...")
                                       .DataTextField("name")
                                       .DataValueField("id")
                                       .Filter(FilterType.Contains)
                                       .DataSource(source =>
                            {
                                       source.Read(read =>
                             {
                                       read.Action("GetCity", "DictionaryItem")
                                       .Data("filterCity");

                                })
                                       .ServerFiltering(true);

                              })
                                       .AutoBind(false)
                                       .Enable(false)
                                       .CascadeFrom("CountyId")
                            )
                            <br />
                        </p>
                        @Html.Label("strada", "StreetName / StreetNo:")
                        <br /> @Html.TextBoxFor(m => m.StreetName1)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Save</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>




        @Html.Label("state", "State:")
        <br />
        @(Html.Kendo().DropDownListFor(m => m.StateId)
                                                                            .Name("StateId")
                                                                            .DataTextField("name")
                                                                            .DataValueField("id")
                                                                            .HtmlAttributes(new { style = "width:20%" })
                                                                            .Filter("contains")
                                                                            .DataSource(source =>
                                                                            {
                                                                                source.Read(read =>
                                                                                {
                                                                                    read.Action("GetState", "DictionaryItem");
                                                                                })
                                                                            .ServerFiltering(true);
                                                                            })
        )


        <br />
        @Html.Label("hiredate", "Employment date:")

        <br />

        @(Html.Kendo().DatePickerFor(m => m.EmploymentDate)
                        .Name("EmploymentDate")
                        .HtmlAttributes(new { style = "width: 20%", title = "datepicker" })
        )


        <br />
        @Html.Label("function", "Employee position:")

        <br />

        @(Html.Kendo().ComboBoxFor(m => m.PositionName)
                                                                            .Name("PositionName")
                                                                            .HtmlAttributes(new { style = "width:20%;" })
                                                                            .Placeholder("Select function...")
                                                                            .DataTextField("name")
                                                                            .DataValueField("id")
                                                                            .Filter(FilterType.Contains)
                                                                            .DataSource(source =>
                                                                            {
                                                                                source.Read(read =>
                                                                                {
                                                                                    read.Action("GetPosition", "DictionaryItem");
                                                                                });
                                                                            }) )

        <br />

        @Html.Label("department", "Departament:")
        <br />

        @(Html.Kendo().ComboBoxFor(m => m.DepartmentId)
                                                                            .Name("DepartmentId")
                                                                            .HtmlAttributes(new { style = "width:20%;" })
                                                                            .Placeholder("Select departments...")
                                                                            .DataTextField("name")
                                                                            .DataValueField("id")
                                                                            .Filter(FilterType.Contains)
                                                                            .DataSource(source =>
                                                                            {
                                                                                source.Read(read =>
                                                                                {
                                                                                    read.Action("GetDepartament", "DictionaryItem");
                                                                                });
                                                                            }))

        <br>

        @Html.Label("managername", "Manager:")

        <br>

        @(Html.Kendo().ComboBoxFor(m => m.ManagerId)
                                                                            .Name("ManagerId")
                                                                            .HtmlAttributes(new { style = "width:20%;" })
                                                                            .Placeholder("Select managers...")
                                                                            .DataTextField("name")
                                                                            .DataValueField("id")
                                                                            .Filter(FilterType.Contains)
                                                                            .DataSource(source =>
                                                                            {
                                                                                source.Read(read =>
                                                                                {
                                                                                    read.Action("GetManager", "DictionaryItem");

                                                                                });
                                                                            }))


        <input type="submit" value="Save" class="btn btn-default" />
}




<style>
    .demo-section {
        padding: 0;
    }

    #add-product .title {
        font-size: 16px;
        color: #fff;
        background-color: #1e88e5;
        padding: 20px 30px;
        margin: 0;
    }

    #fieldlist {
        margin: 0 0 -1.5em;
        padding: 30px;
    }

        #fieldlist li {
            list-style: none;
            padding-bottom: 1.5em;
        }

        #fieldlist label {
            display: block;
            padding-bottom: .6em;
            font-weight: bold;
            text-transform: uppercase;
            font-size: 12px;
        }

            #fieldlist label .k-numerictextbox {
                font-size: 14px;
            }
</style>




<script type="text/javascript">



    function filterPositions() {
        return {
            text: $("#functions").val(),
        };
    }

    function filterDepartments() {
        return {
            text: $("#DepartmentId").val(),
        };
    }

    function filterManager() {
        return {
            text: $("#ManagerId").val(),
        };
        $("#managername").data("ComboBoxFor").select(1);
    }

  

    function filterCity() {
        return {
            countyId: $("#CountyId").val(),

        };

    }
    function onClick(e) {
        kendoConsole.log("event :: click (" + $(e.event.target).closest(".k-button").attr("id") + ")");
    }
    function onImageSelected(event) {
        var selectedFile = event.target.files[0];
        var reader = new FileReader();

        var imgtag = document.getElementById("employeeImage");
        imgtag.title = selectedFile.name;

        reader.onload = function (event) {
            imgtag.src = event.target.result;
        };

        reader.readAsDataURL(selectedFile);
    }
    $(function showPopup() {
        $('a.edit').click(function () {
            var url = $(this).attr('href');
            window.showModalDialog(url, "#1", "dialogHeight:200px;dialogHeight:200px;dialogWidth:200px;dialogTop:200px;dialogLeft:400px;edge:Raised;center:Yes;help:No;Resiable:No;Status:No;");
        });
        return false;
    });

    function popup(url) {
        window.open(url, "#1", "dialogHeight:200px;dialogHeight:200px;dialogWidth:200px;dialogTop200px;dialogLeft:400px;edge:Raised;center:Yes;help:No;Resiable:No;Status:No;");
    }
</script>


